# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - 'v*' # z.B. v1.2.3

jobs:
      
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Extract version info
      id: vars
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        COMMIT=$(git rev-parse --short HEAD)
        BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "commit=$COMMIT" >> $GITHUB_OUTPUT
        echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        mkdir -p dist
        GOOS=windows GOARCH=amd64 go build \
        -ldflags="-s -w \
        -X github.com/LReg/time-tracker/internal/version.Version=${{ steps.vars.outputs.version }} \
        -X github.com/LReg/time-tracker/internal/version.Commit=${{ steps.vars.outputs.commit }} \
        -X github.com/LReg/time-tracker/internal/version.Date=${{ steps.vars.outputs.build_time }}" \
        -o dist/tt.exe  ./cmd/time-tracker
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: "Release ${{ steps.vars.outputs.version }}"
        tag_name: ${{ steps.vars.outputs.version }}
        files: |
          dist/tt.exe
